/*********************************
PARAMETER FOR THE PIPELINE
*********************************/

params {
    /*********************************
    Input and Output. 
    *********************************/ 
    // The folder pointing towards the xenium results
    xenium_path = null
        // Path to where the final csv should be saved.
    outdir = 'results'
    
    /*********************************
    Tile creation
    *********************************/
    // The width of a tile
    tile.width = 4000 
    // The height of a tile
    tile.height = 4000
    // The overlap between titles. The next tile with start at x + width - overlap, or y + height - overlap
    tile.overlap = 200
    // The minimum Q-Score to pass filtering. 
    tile.qv = 20
    // The minimum number of transcripts per tile. This is important
    // because baysor cannot work, if there are too few transcripts.
    // If the minimal number is not met in a tile, it will be expanded by `overlap` 
    // in all fofur directions until the criterion is met.
    tile.minimal_transcripts = 10000


    /*********************************
    Baysor
    *********************************/
    // Minimal number of molecules for a cell to be considered as
    // real. It's an important parameter, as it's used to infer
    // several other parameters. Overrides the config value.

    baysor.min_molecules_per_cell = 30

    // Standard deviation of scale across cells. Can be either
    // number, which means absolute value of the std, or string
    // ended with '%' to set it relative to scale (default: "25%")
    // Negative values mean it must be estimated from `min_molecules_per_cell`
    baysor.scale = -1.0

    // Confidence of the prior_segmentation results.
    // Value in [0; 1]. If you want the final segmentation not
    // contradicting to prior_segmentation, set it to 1.
    // Otherwise, if you assume errors in prior_segmentation,
    // values in [0.2-0.7] allow flexibility for the algorithm.
    baysor.prior_segmentation_confidence = 0.5

    /*********************************
    Merging
    *********************************/
    // Threshold for stitching. If the IOU for two cells is greater that the threshold, they will be merged
    merge.iou_threshold = 0.2


}

/*********************************
Define the singulatiry images used for the pipeline
*********************************/
process {
    withName:getImageSize {
        container = 'docker://maximilianheeg/docker-cellpose:v2.2.3'
    }
    withName:nuclearSegmentation {
        container = 'docker://maximilianheeg/docker-cellpose:v2.2.3'
    }
    withName:tileXenium {
        container = 'docker://maximilianheeg/tile-xenium:v0.1.1'
    }
    withName:Baysor {
        container = 'docker://maximilianheeg/baysor:v0.6.2'
    }
    withName:mergeTiles {
        container = 'docker://maximilianheeg/merge-baysor:v0.1.1'
    }

}
singularity {
    enabled = true
    cacheDir = "singularity"
    autoMounts = true
}


/*********************************
Enable reports
*********************************/
def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}

timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/timeline_report_${trace_timestamp}.html"
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/dag_report_${trace_timestamp}.html"
}

trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/trace_report_${trace_timestamp}.txt"
}
